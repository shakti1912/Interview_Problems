import java.util.Arrays;

public class FindFriends {


    public static int findCircleNum(int[][] M) {
        int[] parent = new int[M.length];
        int count = 0;
        // int[] id = new int[M.length];
        Arrays.fill(parent,-1);

        //union
        for(int i=0; i < M.length; i++){

            for(int j=0; j < M.length; j++)
            {
                if(M[i][j] == 1 && i != j){
                    union(i, j, parent);
                }

            }
        }
        for(int i=0; i < parent.length; i++){
            if(parent[i] == -1){
                count++;
            }
        }
        return count;

    }

    public static int find(int[] parent, int index){
        if(parent[index] == -1){
            return index;
        }
        return find(parent, parent[index]);
    }


    public static void union(int p, int q, int[] parent){
        int pSet = find(parent, p);
        int qSet = find(parent, q);
        if(pSet != qSet){
            parent[pSet] = qSet;
        }

    }

    public static void main(String[] args) {
        int[][] M = {

                //                {1, 1, 0},
//                {1, 1, 0},
//                {0, 0, 1}
//        };
//               {1,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
//               {0,1,0,1,0,0,0,0,0,0,0,0,0,1,0},
//               {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
//               {0,1,0,1,0,0,0,1,0,0,0,1,0,0,0},
//               {0,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
//               {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
//               {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
//               {0,0,0,1,0,0,0,1,1,0,0,0,0,0,0],
//        {0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
//        {1,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1]]  0,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,1,0,1,0,0,0,0,0,0,0,0,0,1,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,1,0,1,0,0,0,1,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,1,1,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],[1,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,1,0,0],[0,1,0,0,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}
//       };
//
//        int c = findCircleNum(M);
//        System.out.println(c);

        };
    }
}